//https://leetcode.com/explore/challenge/card/september-leetcoding-challenge-2021/638/week-3-september-15th-september-21st/3977/

class Solution {
public:
    vector<int> spiralOrder(vector<vector<int>>& matrix) {
        int dir=1,n=matrix.size(),m=matrix[0].size();
        int left=0,right=m-1,top=0,bottom=n-1;
        vector<int>v;
        while(left<=right and top <= bottom){
            if(dir==1){
                for(int i=left;i<=right;i++) v.push_back(matrix[top][i]);
                top++;
                dir=2;
            }
           else if(dir==2){
                 for(int i=top;i<=bottom;i++) v.push_back(matrix[i][right]);
                right--;
                dir=3;
            }
            else  if(dir==3){
                 for(int i=right;i>=left;i--) v.push_back(matrix[bottom][i]);
                bottom--;
                dir=4;
            }
            else  if(dir==4){
                 for(int i=bottom;i>=top;i--) v.push_back(matrix[i][left]);
                left++;
                dir=1;
            }
        }
        return v;
    }
};
