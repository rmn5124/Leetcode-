//https://leetcode.com/explore/challenge/card/september-leetcoding-challenge-2021/638/week-3-september-15th-september-21st/3976/

class Solution {
public:
    int maxTurbulenceSize(vector<int>& a) {
         int n = a.size();
    
    // Handle the corner case
    if(n==0) return 0;
    if(n==1) return 1;
    
    int one=1,two=1;

   
    for(int i=n-2; i>=0; i--)
    {
      
        if(a[i] > a[i+1])
            one = two + 1;
        
       else if(a[i] < a[i+1])
            two = one + 1;
    }
    
   
    
 
    return  max(one, two);

    }
};
