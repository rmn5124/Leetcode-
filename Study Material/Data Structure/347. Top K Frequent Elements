//https://leetcode.com/problems/top-k-frequent-elements/

class Solution {
public:
    vector<int> topKFrequent(vector<int>& nums, int k) {
        priority_queue<pair<int,int>,vector<pair<int,int>>,greater<pair<int,int>>>mh;
        
        unordered_map<int,int>m;
        for(int i=0;i<nums.size();i++) m[nums[i]]++;
        
        for(auto i:m){
            mh.push({i.second,i.first});
            if(mh.size()>k) mh.pop();
        }
        vector<int>v;
        while(mh.size()){
            v.push_back(mh.top().second);
            mh.pop();
        }
        return v;
    }
    
};
