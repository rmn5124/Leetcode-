//https://leetcode.com/problems/k-closest-points-to-origin/

class Solution {
public:
    vector<vector<int>> kClosest(vector<vector<int>>& points, int k) {
        priority_queue<pair<double,double>,vector<pair<double,double>>>mh;
        int n=points.size();
        for(int i=0;i<n;i++){
            double x=points[i][0],y=points[i][1];
            double dst=sqrt((x*x)+(y*y));
            mh.push({dst,i});
                if(mh.size()>k) mh.pop();
            }  
        
        vector<vector<int>>v;
        while(mh.size()){
            int z=mh.top().second;
            v.push_back(points[z]);
        
            mh.pop();
        }
        return v;
    }
};
