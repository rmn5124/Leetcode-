//https://leetcode.com/problems/combination-sum/

class Solution {
public:
     void findCombination(vector<vector<int>>& res, int order,  int target, vector<int>& local, vector<int>& num)
    {
        if(target==0)
        {
            res.push_back(local);
            return;
        }
       
            for(int i = order;i<num.size();i++) // iterative component
            {
                if(num[i]>target) return;
              
                local.push_back(num[i]),
                findCombination(res,i,target-num[i],local,num); // recursive componenet
                local.pop_back();
            }
        
    }
    vector<vector<int>> combinationSum(vector<int>& num, int target) {
        
        vector<vector<int>> res;
        sort(num.begin(),num.end());
        vector<int> local;
        findCombination(res, 0, target, local, num);
        return res;
    
  
    } 
    
};
