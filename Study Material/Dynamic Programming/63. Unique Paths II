//https://leetcode.com/problems/unique-paths-ii/

class Solution {
public:
    int uniquePathsWithObstacles(vector<vector<int>>& grid) {
     int n=grid.size();
        int m=grid[0].size();
        if(n==0) return 0;
       int dp[n][m];
       int i,j;
             bool flag = false;
        dp[0][0] = grid[0][0]; 
      
        for(i=0;i<m;++i){
            if( flag||grid[0][i]==1){flag=true; dp[0][i]=0;}
        else
            dp[0][i] = 1;
        }
        
       flag=false;
        for(i=0;i<n;++i){
              if(flag||grid[i][0]==1){flag=true; dp[i][0]=0;}
            else
            dp[i][0] = 1;
        }
      
        for(i=1;i<n;++i)
        {
            for(j=1;j<m;++j){
                if(grid[i][j]==1)
                    dp[i][j]=0;
            else
                dp[i][j] = dp[i-1][j]+dp[i][j-1];
        }
        }
        return dp[n-1][m-1];
    }
};
